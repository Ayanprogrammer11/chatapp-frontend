{"mappings":"ACEA,IAAI,EAAW,OAAO,yBACtB,GAAI,EAAU,CACZ,IAAI,EAAS,IAAI,UAAU,wBAC3B,AAsCF,WACE,IAAM,EAAmB,SAAS,cAAc,CAAC,iBAC3C,EAAY,SAAS,aAAa,CAAC,KACzC,EAAU,SAAS,CAAC,GAAG,CAAC,cACxB,EAAU,SAAS,CAAG,iBACjB,EAAiB,UAAU,CAAC,MAAM,EAAE,EAAiB,MAAM,CAAC,GACjE,EAAO,MAAM,CAAG,KACd,QAAQ,GAAG,CAAC,2BACZ,EAAO,IAAI,CAAC,KAAK,SAAS,CAAC,CAAE,KAAM,WAAY,KAAM,CAAS,GAChE,EAEA,EAAO,SAAS,CAAG,AAAC,IAClB,QAAQ,GAAG,CAAC,GACZ,IAAM,EAAU,KAAK,KAAK,CAAC,EAAM,IAAI,GACrC,AAjDJ,SAAwB,CAAO,CAAE,CAAM,CAAE,CAAS,EAChD,IAAM,EAAmB,SAAS,cAAc,CAAC,iBAC3C,EAAY,SAAS,aAAa,CAAC,OACnC,EAAe,SAAS,aAAa,CAAC,UACtC,EAAO,EAAS,WAAW,EAEjC,CAAA,EAAU,SAAS,CAAG,CAAC,CAAC,EAAE,EAAU,EAAE,EAAE,EAAO,EAAE,EAAE,EAAQ,CAAC,CAC5D,EAAU,SAAS,CAAC,GAAG,CAAC,WAEpB,EAAO,WAAW,KAAO,EAC3B,EAAU,SAAS,CAAC,GAAG,CAAC,gBAExB,EAAU,SAAS,CAAC,GAAG,CAAC,iBAG1B,EAAa,SAAS,CAAG,SACzB,EAAa,SAAS,CAAC,GAAG,CAAC,iBAC3B,EAAa,OAAO,CAAG,KACrB,EAAU,MAAM,EAClB,EAGI,SAAS,aAAa,CAAC,gBACzB,SAAS,aAAa,CAAC,eAAe,MAAM,GAE9C,EAAU,WAAW,CAAC,GACtB,EAAiB,WAAW,CAAC,EAC/B,EAsBmB,EAAQ,IAAI,CAAE,EAAQ,QAAQ,CAAE,EAAQ,SAAS,CAClE,EAEA,EAAO,OAAO,CAAG,KACf,QAAQ,GAAG,CAAC,oCACd,CACF,GAzDA","sources":["<anon>","script.js"],"sourcesContent":["\"use strict\";\nlet username = prompt(\"Enter your username: \");\nif (username) {\n    var socket = new WebSocket(\"ws://localhost:3000\");\n    main();\n}\nfunction displayMessage(message, sender, timestamp) {\n    const messageContainer = document.getElementById(\"chat-messages\");\n    const messageEl = document.createElement(\"div\");\n    const deleteButton = document.createElement(\"button\");\n    const user = username.toLowerCase();\n    messageEl.innerText = `[${timestamp}] ${sender}: ${message}`;\n    messageEl.classList.add(\"message\");\n    if (sender.toLowerCase() === user) messageEl.classList.add(\"user-message\");\n    else messageEl.classList.add(\"other-message\");\n    deleteButton.innerText = \"Delete\";\n    deleteButton.classList.add(\"delete-button\");\n    deleteButton.onclick = ()=>{\n        messageEl.remove();\n    };\n    // Remove placeholder\n    if (document.querySelector(\".no-message\")) document.querySelector(\".no-message\").remove();\n    messageEl.appendChild(deleteButton);\n    messageContainer.appendChild(messageEl);\n}\nfunction sendMessage() {\n    const chatInput = document.getElementById(\"message-input\");\n    const message = JSON.stringify({\n        text: chatInput.value\n    });\n    socket.send(message);\n}\nfunction main() {\n    const messageContainer = document.getElementById(\"chat-messages\");\n    const noMessage = document.createElement(\"p\");\n    noMessage.classList.add(\"no-message\");\n    noMessage.innerText = \"Start Chatting\";\n    if (!messageContainer.childNodes.length) messageContainer.append(noMessage);\n    socket.onopen = ()=>{\n        console.log(\"Connected to the server\");\n        socket.send(JSON.stringify({\n            type: \"username\",\n            text: username\n        }));\n    };\n    socket.onmessage = (event)=>{\n        console.log(event);\n        const message = JSON.parse(event.data);\n        displayMessage(message.text, message.username, message.timestamp);\n    };\n    socket.onclose = ()=>{\n        console.log(\"Connection to server disconnected\");\n    };\n}\n\n//# sourceMappingURL=index.f6115c74.js.map\n","\"use strict\";\r\n\r\nlet username = prompt(\"Enter your username: \");\r\nif (username) {\r\n  var socket = new WebSocket(\"ws://localhost:3000\");\r\n  main();\r\n}\r\n\r\nfunction displayMessage(message, sender, timestamp) {\r\n  const messageContainer = document.getElementById(\"chat-messages\");\r\n  const messageEl = document.createElement(\"div\");\r\n  const deleteButton = document.createElement(\"button\");\r\n  const user = username.toLowerCase();\r\n\r\n  messageEl.innerText = `[${timestamp}] ${sender}: ${message}`;\r\n  messageEl.classList.add(\"message\");\r\n\r\n  if (sender.toLowerCase() === user) {\r\n    messageEl.classList.add(\"user-message\");\r\n  } else {\r\n    messageEl.classList.add(\"other-message\");\r\n  }\r\n\r\n  deleteButton.innerText = \"Delete\";\r\n  deleteButton.classList.add(\"delete-button\");\r\n  deleteButton.onclick = () => {\r\n    messageEl.remove();\r\n  };\r\n\r\n  // Remove placeholder\r\n  if (document.querySelector(\".no-message\"))\r\n    document.querySelector(\".no-message\").remove();\r\n\r\n  messageEl.appendChild(deleteButton);\r\n  messageContainer.appendChild(messageEl);\r\n}\r\n\r\nfunction sendMessage() {\r\n  const chatInput = document.getElementById(\"message-input\");\r\n  const message = JSON.stringify({ text: chatInput.value });\r\n  socket.send(message);\r\n}\r\n\r\nfunction main() {\r\n  const messageContainer = document.getElementById(\"chat-messages\");\r\n  const noMessage = document.createElement(\"p\");\r\n  noMessage.classList.add(\"no-message\");\r\n  noMessage.innerText = \"Start Chatting\";\r\n  if (!messageContainer.childNodes.length) messageContainer.append(noMessage);\r\n  socket.onopen = () => {\r\n    console.log(\"Connected to the server\");\r\n    socket.send(JSON.stringify({ type: \"username\", text: username }));\r\n  };\r\n\r\n  socket.onmessage = (event) => {\r\n    console.log(event);\r\n    const message = JSON.parse(event.data);\r\n    displayMessage(message.text, message.username, message.timestamp);\r\n  };\r\n\r\n  socket.onclose = () => {\r\n    console.log(\"Connection to server disconnected\");\r\n  };\r\n}\r\n"],"names":["username","prompt","socket","WebSocket","main","messageContainer","document","getElementById","noMessage","createElement","classList","add","innerText","childNodes","length","append","onopen","console","log","send","JSON","stringify","type","text","onmessage","event","message","parse","data","displayMessage","sender","timestamp","messageEl","deleteButton","user","toLowerCase","onclick","remove","querySelector","appendChild","onclose"],"version":3,"file":"index.f6115c74.js.map"}